<?xml version="1.0"?>

<doc>
    <assembly>
        <name>SRSWebApi</name>
    </assembly>
    <members>
        <member name="T:SRSWebApi.Attributes.AuthVerifyAttribute">
            <summary>
                验证session和allowkey的类
            </summary>
        </member>
        <member
            name="M:SRSWebApi.Attributes.AuthVerifyAttribute.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
                请求结束后
            </summary>
            <param name="context"></param>
        </member>
        <member
            name="M:SRSWebApi.Attributes.AuthVerifyAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
                请求进行中，判断用户session及allowkey的合法性
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:SRSWebApi.Attributes.LogAttribute">
            <summary>
                日志记录
            </summary>
        </member>
        <member
            name="M:SRSWebApi.Attributes.LogAttribute.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
                请求后
            </summary>
            <param name="context"></param>
        </member>
        <member
            name="M:SRSWebApi.Attributes.LogAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
                请求中
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:SRSWebApi.CommonFunctions">
            <summary>
                通用类
            </summary>
        </member>
        <member name="F:SRSWebApi.CommonFunctions.WorkPath">
            <summary>
                工作目录
            </summary>
        </member>
        <member name="F:SRSWebApi.CommonFunctions.ConfPath">
            <summary>
                配置文件地址
            </summary>
        </member>
        <member name="F:SRSWebApi.CommonFunctions.BaseUrl">
            <summary>
                基础路由地址
            </summary>
        </member>
        <member name="F:SRSWebApi.CommonFunctions.SessionManager">
            <summary>
                Session管理器
            </summary>
        </member>
        <member name="F:SRSWebApi.CommonFunctions.IsDebug">
            <summary>
                调试模式下不启用授权和session验证
            </summary>
        </member>
        <member name="M:SRSWebApi.CommonFunctions.GetTimeStampMilliseconds">
            <summary>
                获取时间戳(毫秒级)
            </summary>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.CommonFunctions.CommonInit">
            <summary>
                通用类初始化
            </summary>
        </member>
        <member name="F:SRSWebApi.CommonFunctions.Conf">
            <summary>
                srswebapi配置文件类
            </summary>
        </member>
        <member name="M:SRSWebApi.CommonFunctions.CheckAuth(System.String,System.String,System.String)">
            <summary>
                检测session和allow
            </summary>
            <param name="ipAddr"></param>
            <param name="allowKey"></param>
            <param name="sessionCode"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.CommonFunctions.CheckPassword(System.String)">
            <summary>
                检查密码
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.CommonFunctions.CheckSession(System.String)">
            <summary>
                检查Session是否正常
            </summary>
            <param name="sessionCode"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.CommonFunctions.CheckAllow(System.String,System.String)">
            <summary>
                检查appkey
            </summary>
            <param name="ipAddr"></param>
            <param name="allowKey"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.CommonFunctions.DelApisResult(System.Object,SRSManageCommon.ResponseStruct)">
            <summary>
                apis返回结果统一处理
            </summary>
            <param name="rt">返回值</param>
            <param name="rs">ResponseStruct</param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.AllowKey">
            <summary>
                allowkey管理类
            </summary>
        </member>
        <member name="P:SRSWebApi.AllowKey.Key">
            <summary>
                key值
            </summary>
        </member>
        <member name="P:SRSWebApi.AllowKey.IpArray">
            <summary>
                ip地址列表
            </summary>
        </member>
        <member name="T:SRSWebApi.Config">
            <summary>
                配置文件类
            </summary>
        </member>
        <member name="P:SRSWebApi.Config.HttpPort">
            <summary>
                http端口
            </summary>
        </member>
        <member name="P:SRSWebApi.Config.Password">
            <summary>
                密码
            </summary>
        </member>
        <member name="P:SRSWebApi.Config.AllowKeys">
            <summary>
                控制访问授权
            </summary>
        </member>
        <member name="M:SRSWebApi.Config.RebuidConfig(System.String)">
            <summary>
                写入配置文件
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Config.LoadConfig(System.String)">
            <summary>
                加载配置文件
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.Controllers.AllowController">
            <summary>
                授权访问接口类
            </summary>
        </member>
        <member name="M:SRSWebApi.Controllers.AllowController.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
                注入httpcontext
            </summary>
            <param name="httpContextAccessor"></param>
        </member>
        <member name="M:SRSWebApi.Controllers.AllowController.RefreshSession(SRSWebApi.Session)">
            <summary>
                刷新Session
            </summary>
            <param name="request">旧的session</param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.AllowController.GetSession(SRSWebApi.RequestModules.ReqGetSession)">
            <summary>
                获取一个session用于通讯
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.AllowController.SetAllowByKey(SRSWebApi.RequestModules.ReqSetOrAddAllow)">
            <summary>
                修改设置一个allow
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.AllowController.DelAllowByKey(SRSWebApi.RequestModules.ReqDelAllow)">
            <summary>
                删除一条allow
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.AllowController.AddAllow(SRSWebApi.RequestModules.ReqSetOrAddAllow)">
            <summary>
                添加一个allow
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.AllowController.GetAllows(SRSWebApi.RequestModules.ReqGetAllows)">
            <summary>
                获取授权列表
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.Controllers.OnvifController">
            <summary>
                onvif设备接口类
            </summary>
        </member>
        <member name="M:SRSWebApi.Controllers.OnvifController.InitAll">
            <summary>
                初始化还未初始化的onvif摄像头
            </summary>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.OnvifController.InitByIpAddress(System.String)">
            <summary>
                初始化还未初始化的onvif摄像头用ip 地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.OnvifController.SetPtzZoom(SRSManageCommon.PtzZoomStruct)">
            <summary>
                设置Ptz焦距
            </summary>
            <param name="ptzZoomStruct"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.OnvifController.GetPtzPosition(SRSManageCommon.PtzMoveStruct)">
            <summary>
                获取ptz坐标
            </summary>
            <param name="ptzMove"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.OnvifController.PtzKeepMoveStop(SRSManageCommon.PtzMoveStruct)">
            <summary>
                停止持续移动
            </summary>
            <param name="ptzMove"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.OnvifController.PtzMove(SRSManageCommon.PtzMoveStruct)">
            <summary>
                控制ptz移动
            </summary>
            <param name="ptzMove"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.OnvifController.InitMonitor(SRSWebApi.RequestModules.ReqInitOnvif)">
            <summary>
                初始化onvif设备并加到管理列表中
            </summary>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.OnvifController.GetMonitorList">
            <summary>
                获取onvif摄像头参数列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.OnvifController.GetMonitor(System.String)">
            <summary>
                跟据实例名称/ip地址获取onvif摄像头实例
            </summary>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.Controllers.SystemController">
            <summary>
                系统信息接口类
            </summary>
        </member>
        <member name="M:SRSWebApi.Controllers.SystemController.LoadOnvifConfig">
            <summary>
                加载onvif配置文件接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.SystemController.WriteOnvifConfig">
            <summary>
                写入onvif配置文件接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.SystemController.DelOnvifConfigByIpAddress(System.String)">
            <summary>
                删除一个onvif摄像头配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.SystemController.GetSystemInfo">
            <summary>
                获取系统信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.SystemController.GetSrsInstanceList">
            <summary>
                获取SRS实例列表
            </summary>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.Controllers.VhostBandcheckController">
            <summary>
                vhostbandcheck接口类
            </summary>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostBandcheckController.DeleteVhostBandcheck(System.String,System.String)">
            <summary>
                删除Bandcheck配置
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostBandcheckController.GetVhostBandcheck(System.String,System.String)">
            <summary>
                获取Vhost中的Bandcheck
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostBandcheckController.SetVhostBandcheck(System.String,System.String,SRSConfFile.SRSConfClass.Bandcheck,System.Boolean)">
            <summary>
                设置Bandcheck
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="bandcheck"></param>
            <param name="createIfNotFound"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostBandcheckController.CreateVhostBandcheck(System.String,System.String,SRSConfFile.SRSConfClass.Bandcheck)">
            <summary>
                创建Bandcheck
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="bandcheck"></param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.Controllers.VhostClusterController">
            <summary>
                vhostcluster接口类
            </summary>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostClusterController.DeleteVhostCluster(System.String,System.String)">
            <summary>
                删除Cluster配置
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostClusterController.GetVhostCluster(System.String,System.String)">
            <summary>
                获取Vhost中的Cluster
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostClusterController.SetVhostCluster(System.String,System.String,SRSConfFile.SRSConfClass.Cluster,System.Boolean)">
            <summary>
                设置Cluster
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="cluster"></param>
            <param name="createIfNotFound"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostClusterController.CreateVhostCluster(System.String,System.String,SRSConfFile.SRSConfClass.Cluster)">
            <summary>
                创建Cluster
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="cluster"></param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.Controllers.VhostController">
            <summary>
                vhost控制类
            </summary>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostController.TestGet(System.String)">
            <summary>
                获取Vhost列表的Instance名称列表
            </summary>
            <param name="deviceId"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostController.TestPost(System.String)">
            <summary>
                测试post方法
            </summary>
            <param name="deviceId"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostController.GetVhostsInstanceName(System.String)">
            <summary>
                获取Vhost列表的Instance名称列表
            </summary>
            <param name="deviceId"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostController.GetVhostByDomain(System.String,System.String)">
            <summary>
                通过domain获取vhost
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostController.GetVhostList(System.String)">
            <summary>
                获取Vhost列表
            </summary>
            <param name="deviceId"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostController.GetVhostTemplate(SRSApis.SRSManager.Apis.ApiModules.VhostIngestInputType)">
            <summary>
                获取Vhost的各类模板 [0:Stream] [1:File] [2:Device]
            </summary>
            <param name="vtype"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostController.CreateVhost(System.String,SRSApis.SRSManager.Apis.ApiModules.VhostIngestInputType)">
            <summary>
                创建一个vhost
            </summary>
            <param name="deviceId"></param>
            <param name="vtype"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostController.SetVhost(System.String,SRSConfFile.SRSConfClass.SrsvHostConfClass,System.Boolean)">
            <summary>
                设置一个Vhost的参数
            </summary>
            <param name="deviceId"></param>
            <param name="vhost"></param>
            <param name="createIfNotFound"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostController.DeleteVhostByDomain(System.String,System.String)">
            <summary>
                删除一个vhost,用域名
            </summary>
            <param name="deviceId"></param>
            <param name="domain"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostController.ChangeVhostDomain(System.String,System.String,System.String)">
            <summary>
                修改vhost的域名
            </summary>
            <param name="deviceId"></param>
            <param name="domain"></param>
            <param name="newdomain"></param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.Controllers.VhostDashController">
            <summary>
                vhostdash接口类
            </summary>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostDashController.DeleteVhostDash(System.String,System.String)">
            <summary>
                删除Dash配置
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostDashController.GetVhostDash(System.String,System.String)">
            <summary>
                获取Vhost中的Dash
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostDashController.SetVhostDash(System.String,System.String,SRSConfFile.SRSConfClass.Dash,System.Boolean)">
            <summary>
                设置Dash
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="dash"></param>
            <param name="createIfNotFound"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostDashController.CreateVhostDash(System.String,System.String,SRSConfFile.SRSConfClass.Dash)">
            <summary>
                创建Dash
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="dash"></param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.Controllers.VhostDvrController">
            <summary>
                vhost dvr接口类
            </summary>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostDvrController.DeleteVhostDvr(System.String,System.String)">
            <summary>
                删除Dvr配置
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostDvrController.GetVhostDvr(System.String,System.String)">
            <summary>
                获取Vhost中的Dvr
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostDvrController.SetVhostDvr(System.String,System.String,SRSConfFile.SRSConfClass.Dvr,System.Boolean)">
            <summary>
                设置Dvr
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="dvr"></param>
            <param name="createIfNotFound"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostDvrController.CreateVhostDvr(System.String,System.String,SRSConfFile.SRSConfClass.Dvr)">
            <summary>
                创建Dvr
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="dvr"></param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.Controllers.VhostExecController">
            <summary>
                vhostexec接口类
            </summary>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostExecController.DeleteVhostExec(System.String,System.String)">
            <summary>
                删除Exec配置
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostExecController.GetVhostExec(System.String,System.String)">
            <summary>
                获取Vhost中的Exec
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostExecController.SetVhostExec(System.String,System.String,SRSConfFile.SRSConfClass.Exec,System.Boolean)">
            <summary>
                设置Exec
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="exec"></param>
            <param name="createIfNotFound"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostExecController.CreateVhostExec(System.String,System.String,SRSConfFile.SRSConfClass.Exec)">
            <summary>
                创建Exec
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="exec"></param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.Controllers.VhostForwardController">
            <summary>
                vhostforward接口类
            </summary>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostForwardController.DeleteVhostForward(System.String,System.String)">
            <summary>
                删除Forward配置
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostForwardController.GetVhostForward(System.String,System.String)">
            <summary>
                获取Vhost中的Forward
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostForwardController.SetVhostForward(System.String,System.String,SRSConfFile.SRSConfClass.Forward,System.Boolean)">
            <summary>
                设置Forward
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="forward"></param>
            <param name="createIfNotFound"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostForwardController.CreateVhostForward(System.String,System.String,SRSConfFile.SRSConfClass.Forward)">
            <summary>
                创建Forward
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="forward"></param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.Controllers.VhostHdsController">
            <summary>
                vhosthds接口类
            </summary>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostHdsController.DeleteVhostHds(System.String,System.String)">
            <summary>
                删除Hds配置
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostHdsController.GetVhostHds(System.String,System.String)">
            <summary>
                获取Vhost中的Hds
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostHdsController.SetVhostHds(System.String,System.String,SRSConfFile.SRSConfClass.Hds,System.Boolean)">
            <summary>
                设置Hds
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="dhs"></param>
            <param name="createIfNotFound"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostHdsController.CreateVhostHds(System.String,System.String,SRSConfFile.SRSConfClass.Hds)">
            <summary>
                创建Hds
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="dhs"></param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.Controllers.VhostHlsController">
            <summary>
                vhosthls接口类
            </summary>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostHlsController.DeleteVhostHls(System.String,System.String)">
            <summary>
                删除Hls配置
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostHlsController.GetVhostHls(System.String,System.String)">
            <summary>
                获取Vhost中的Hls
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostHlsController.SetVhostHls(System.String,System.String,SRSConfFile.SRSConfClass.Hls,System.Boolean)">
            <summary>
                设置Hls
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="hls"></param>
            <param name="createIfNotFound"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostHlsController.CreateVhostHls(System.String,System.String,SRSConfFile.SRSConfClass.Hls)">
            <summary>
                创建Hls
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="hls"></param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.Controllers.VhostHttpHooksController">
            <summary>
                vhosthttphooks接口类
            </summary>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostHttpHooksController.DeleteVhostHttpHooks(System.String,System.String)">
            <summary>
                删除HttpHooks配置
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostHttpHooksController.GetVhostHttpHooks(System.String,System.String)">
            <summary>
                获取Vhost中的HttpHooks
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostHttpHooksController.SetVhostHttpHooks(System.String,System.String,SRSConfFile.SRSConfClass.HttpHooks,System.Boolean)">
            <summary>
                设置HttpHooks
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="httpHooks"></param>
            <param name="createIfNotFound"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostHttpHooksController.CreateVhostHttpHooks(System.String,System.String,SRSConfFile.SRSConfClass.HttpHooks)">
            <summary>
                创建HttpHooks
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="httpHooks"></param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.Controllers.VhostHttpRemux">
            <summary>
                vhosthttpremux接口类
            </summary>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostHttpRemux.DeleteVhostHttpRemux(System.String,System.String)">
            <summary>
                删除HttpRemux配置
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostHttpRemux.GetVhostHttpRemux(System.String,System.String)">
            <summary>
                获取Vhost中的HttpRemux
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostHttpRemux.SetVhostHttpRemux(System.String,System.String,SRSConfFile.SRSConfClass.HttpRemux,System.Boolean)">
            <summary>
                设置HttpRemux
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="httpRemux"></param>
            <param name="createIfNotFound"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostHttpRemux.CreateVhostHttpRemux(System.String,System.String,SRSConfFile.SRSConfClass.HttpRemux)">
            <summary>
                创建HttpRemux
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="httpRemux"></param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.Controllers.VhostHttpStaticController">
            <summary>
                vhosthttpstatic接口类
            </summary>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostHttpStaticController.DeleteVhostHttpStatic(System.String,System.String)">
            <summary>
                删除HttpStatic配置
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostHttpStaticController.GetVhostHttpStatic(System.String,System.String)">
            <summary>
                获取Vhost中的HttpStatic
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostHttpStaticController.SetVhostHttpStatic(System.String,System.String,SRSConfFile.SRSConfClass.HttpStatic,System.Boolean)">
            <summary>
                设置HttpStatic
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="httpStatic"></param>
            <param name="createIfNotFound"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostHttpStaticController.CreateVhostHttpStatic(System.String,System.String,SRSConfFile.SRSConfClass.HttpStatic)">
            <summary>
                创建HttpStatic
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="httpStatic"></param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.Controllers.VhostIngestController">
            <summary>
                vhostingest接口类
            </summary>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostIngestController.DeleteVhostIngestByIngestInstanceName(System.String,System.String,System.String)">
            <summary>
                通过VhostDomain和IngestInstanceName删除一个Ingest
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="ingestInstanceName"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostIngestController.GetVhostIngestNameList(System.String,System.String)">
            <summary>
                获取所有或者指定vhost中的ingest实例名称
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostIngestController.GetVhostIngest(System.String,System.String,System.String)">
            <summary>
                获取一个Ingest配置
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="ingestInstanceName"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostIngestController.SetVhostIngest(System.String,System.String,System.String,SRSConfFile.SRSConfClass.Ingest,System.Boolean)">
            <summary>
                设置Ingest
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="ingest"></param>
            <param name="createIfNotFound"></param>
            <param name="ingestInstanceName"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostIngestController.CreateVhostIngest(System.String,System.String,SRSConfFile.SRSConfClass.Ingest)">
            <summary>
                创建Ingest
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="ingest"></param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.Controllers.VhostPlayController">
            <summary>
                vhostplay接口类
            </summary>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostPlayController.DeleteVhostPlay(System.String,System.String)">
            <summary>
                删除Play配置
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostPlayController.GetVhostPlay(System.String,System.String)">
            <summary>
                获取Vhost中的Play
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostPlayController.SetVhostPlay(System.String,System.String,SRSConfFile.SRSConfClass.Play,System.Boolean)">
            <summary>
                设置Play
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="play"></param>
            <param name="createIfNotFound"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostPlayController.CreateVhostPlay(System.String,System.String,SRSConfFile.SRSConfClass.Play)">
            <summary>
                创建Play
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="play"></param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.Controllers.VhostPublishController">
            <summary>
                vhostpublish接口类
            </summary>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostPublishController.DeleteVhostPublish(System.String,System.String)">
            <summary>
                删除Publish配置
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostPublishController.GetVhostPublish(System.String,System.String)">
            <summary>
                获取Vhost中的Publish
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostPublishController.SetVhostPublish(System.String,System.String,SRSConfFile.SRSConfClass.Publish,System.Boolean)">
            <summary>
                设置Publish
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="publish"></param>
            <param name="createIfNotFound"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostPublishController.CreateVhostPublish(System.String,System.String,SRSConfFile.SRSConfClass.Publish)">
            <summary>
                创建Publish
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="publish"></param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.Controllers.VhostReferController">
            <summary>
                vhostrefer接口类
            </summary>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostReferController.DeleteVhostRefer(System.String,System.String)">
            <summary>
                删除Refer配置
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostReferController.GetVhostRefer(System.String,System.String)">
            <summary>
                获取Vhost中的Refer
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostReferController.SetVhostRefer(System.String,System.String,SRSConfFile.SRSConfClass.Refer,System.Boolean)">
            <summary>
                设置Refer
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="refer"></param>
            <param name="createIfNotFound"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostReferController.CreateVhostRefer(System.String,System.String,SRSConfFile.SRSConfClass.Refer)">
            <summary>
                创建Refer
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="refer"></param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.Controllers.VhostRtcController">
            <summary>
                vhostrtc接口类
            </summary>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostRtcController.DeleteVhostRtc(System.String,System.String)">
            <summary>
                删除Rtc配置
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostRtcController.GetVhostRtc(System.String,System.String)">
            <summary>
                获取Vhost中的Rtc
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostRtcController.SetVhostRtc(System.String,System.String,SRSConfFile.SRSConfClass.Rtc,System.Boolean)">
            <summary>
                设置Rtc
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="rtc"></param>
            <param name="createIfNotFound"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostRtcController.CreateVhostRtc(System.String,System.String,SRSConfFile.SRSConfClass.Rtc)">
            <summary>
                创建Rtc
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="rtc"></param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.Controllers.VhostSecurityController">
            <summary>
                vhostsecurity接口类
            </summary>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostSecurityController.DeleteVhostSecurity(System.String,System.String)">
            <summary>
                删除Security配置
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.Controllers.VhostSecurityController.GetVhostSecurity(System.String,System.String)">
            <summary>
                获取Vhost中的Security
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostSecurityController.SetVhostSecurity(System.String,System.String,SRSConfFile.SRSConfClass.Security,System.Boolean)">
            <summary>
                设置Security
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="security"></param>
            <param name="createIfNotFound"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostSecurityController.CreateVhostSecurity(System.String,System.String,SRSConfFile.SRSConfClass.Security)">
            <summary>
                创建Security
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="security"></param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.Controllers.VhostTranscodeController">
            <summary>
                vhosttranscode接口类
            </summary>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostTranscodeController.DeleteVhostTranscodeByTranscodeInstanceName(System.String,System.String,System.String)">
            <summary>
                通过VhostDomain和TranscodeInstanceName删除一个Transcode
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="transcodeInstanceName"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostTranscodeController.GetVhostTranscodeNameList(System.String,System.String)">
            <summary>
                获取所有或者指定vhost中的transcode实例名称
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostTranscodeController.GetVhostTranscode(System.String,System.String,System.String)">
            <summary>
                获取一个Transcode配置
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="transcodeInstanceName"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostTranscodeController.SetVhostTranscode(System.String,System.String,System.String,SRSConfFile.SRSConfClass.Transcode,System.Boolean)">
            <summary>
                设置Transcode
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="transcodeInstanceName"></param>
            <param name="transcode"></param>
            <param name="createIfNotFound"></param>
            <returns></returns>
        </member>
        <member
            name="M:SRSWebApi.Controllers.VhostTranscodeController.CreateVhostTranscode(System.String,System.String,SRSConfFile.SRSConfClass.Transcode)">
            <summary>
                创建Transcode
            </summary>
            <param name="deviceId"></param>
            <param name="vhostDomain"></param>
            <param name="transcode"></param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.JsonHelper">
            <summary>
                json工具类
            </summary>
        </member>
        <member name="M:SRSWebApi.JsonHelper.ToJson(System.Object,Newtonsoft.Json.MissingMemberHandling)">
            <summary>
                将指定的对象序列化成 JSON 数据。
            </summary>
            <param name="obj">要序列化的对象。</param>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.JsonHelper.FromJson``1(System.String,Newtonsoft.Json.MissingMemberHandling)">
            <summary>
                将指定的 JSON 数据反序列化成指定对象。
            </summary>
            <typeparam name="T">对象类型。</typeparam>
            <param name="json">JSON 数据。</param>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.LogWebApiWriter">
            <summary>
                webapi日志记录类
            </summary>
        </member>
        <member name="F:SRSWebApi.LogWebApiWriter._lockLogFile">
            <summary>
                锁对象
            </summary>
        </member>
        <member name="M:SRSWebApi.LogWebApiWriter.WriteWebApiLog(System.String,System.String,System.ConsoleColor)">
            <summary>
                日志写入方法
            </summary>
            <param name="message"></param>
            <param name="info"></param>
            <param name="color"></param>
        </member>
        <member name="T:SRSWebApi.Program">
            <summary>
                入口类
            </summary>
        </member>
        <member name="F:SRSWebApi.Program.CommonFunctions">
            <summary>
                webapi的通用类
            </summary>
        </member>
        <member name="M:SRSWebApi.Program.Main(System.String[])">
            <summary>
                程序入口
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:SRSWebApi.Program.CreateHostBuilder(System.String[])">
            <summary>
                创建httpwebserver
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.RequestModules.ReqDelAllow">
            <summary>
                删除一个授权访问的请求结构
            </summary>
        </member>
        <member name="P:SRSWebApi.RequestModules.ReqDelAllow.Password">
            <summary>
                密码
            </summary>
        </member>
        <member name="P:SRSWebApi.RequestModules.ReqDelAllow.Key">
            <summary>
                uuid
            </summary>
        </member>
        <member name="T:SRSWebApi.RequestModules.ReqGetAllows">
            <summary>
                获取授权访问列表的请求结构
            </summary>
        </member>
        <member name="P:SRSWebApi.RequestModules.ReqGetAllows.Password">
            <summary>
                密码
            </summary>
        </member>
        <member name="T:SRSWebApi.RequestModules.ReqGetSession">
            <summary>
                获取Session的请求结构
            </summary>
        </member>
        <member name="P:SRSWebApi.RequestModules.ReqGetSession.AllowKey">
            <summary>
                allowkey
            </summary>
        </member>
        <member name="T:SRSWebApi.RequestModules.ReqInitOnvif">
            <summary>
                初始化onvif设备的请求结构
            </summary>
        </member>
        <member name="P:SRSWebApi.RequestModules.ReqInitOnvif.IpAddrs">
            <summary>
                ip 地址串，多个ip 地址用空格隔开
            </summary>
        </member>
        <member name="P:SRSWebApi.RequestModules.ReqInitOnvif.Username">
            <summary>
                用户名
            </summary>
        </member>
        <member name="P:SRSWebApi.RequestModules.ReqInitOnvif.Password">
            <summary>
                密码
            </summary>
        </member>
        <member name="P:SRSWebApi.RequestModules.ReqInitOnvif.IpAddrArray">
            <summary>
                初始化时不用传，此字段为内部使用
            </summary>
        </member>
        <member name="M:SRSWebApi.RequestModules.ReqInitOnvif.GetIpArray">
            <summary>
                从ip地址串中获取ip 地址列表
            </summary>
        </member>
        <member name="T:SRSWebApi.RequestModules.ReqSetOrAddAllow">
            <summary>
                设置或添加Allow的请求结构
            </summary>
        </member>
        <member name="P:SRSWebApi.RequestModules.ReqSetOrAddAllow.Password">
            <summary>
                密码
            </summary>
        </member>
        <member name="P:SRSWebApi.RequestModules.ReqSetOrAddAllow.Allowkey">
            <summary>
                授权反问key
            </summary>
        </member>
        <member name="T:SRSWebApi.ResponseModules.AllowListModule">
            <summary>
                allowkeylist返回结构
            </summary>
        </member>
        <member name="P:SRSWebApi.ResponseModules.AllowListModule.AllowKeys">
            <summary>
                AllowKey列表
            </summary>
        </member>
        <member name="T:SRSWebApi.ResponseModules.BaseResponseModule">
            <summary>
                webapi返回结构
            </summary>
        </member>
        <member name="P:SRSWebApi.ResponseModules.BaseResponseModule.Code">
            <summary>
                返回http status code
            </summary>
        </member>
        <member name="P:SRSWebApi.ResponseModules.BaseResponseModule.Msg">
            <summary>
                返回的message
            </summary>
        </member>
        <member name="T:SRSWebApi.ResponseModules.SrsInstanceModule">
            <summary>
                SRS实例模型
            </summary>
        </member>
        <member name="P:SRSWebApi.ResponseModules.SrsInstanceModule.DeviceId">
            <summary>
                设备ID
            </summary>
        </member>
        <member name="P:SRSWebApi.ResponseModules.SrsInstanceModule.IsInit">
            <summary>
                是否初始化
            </summary>
        </member>
        <member name="P:SRSWebApi.ResponseModules.SrsInstanceModule.IsRunning">
            <summary>
                是否正在运行中
            </summary>
        </member>
        <member name="P:SRSWebApi.ResponseModules.SrsInstanceModule.ConfigPath">
            <summary>
                配置文件路径
            </summary>
        </member>
        <member name="P:SRSWebApi.ResponseModules.SrsInstanceModule.PidValue">
            <summary>
                pid值
            </summary>
        </member>
        <member name="P:SRSWebApi.ResponseModules.SrsInstanceModule.SrsProcessWorkPath">
            <summary>
                srs进程运行目录
            </summary>
        </member>
        <member name="P:SRSWebApi.ResponseModules.SrsInstanceModule.SrsInstanceWorkPath">
            <summary>
                srs实例运行目录
            </summary>
        </member>
        <member name="T:SRSWebApi.Session">
            <summary>
                session类结构
            </summary>
        </member>
        <member name="P:SRSWebApi.Session.AllowKey">
            <summary>
                授权key
            </summary>
        </member>
        <member name="P:SRSWebApi.Session.RefreshCode">
            <summary>
                session刷新code
            </summary>
        </member>
        <member name="P:SRSWebApi.Session.SessionCode">
            <summary>
                session code
            </summary>
        </member>
        <member name="P:SRSWebApi.Session.Expires">
            <summary>
                过期时间
            </summary>
        </member>
        <member name="T:SRSWebApi.SessionManager">
            <summary>
                session管理
            </summary>
        </member>
        <member name="P:SRSWebApi.SessionManager.SessionList">
            <summary>
                session列表
            </summary>
        </member>
        <member name="M:SRSWebApi.SessionManager.clearExpires">
            <summary>
                清空已经过期的session
            </summary>
        </member>
        <member name="M:SRSWebApi.SessionManager.#ctor">
            <summary>
                Session管理构造函数
            </summary>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SRSWebApi.SessionManager.RefreshSession(SRSWebApi.Session)">
            <summary>
                刷新Session
            </summary>
            <param name="session">旧的session</param>
            <returns></returns>
        </member>
        <member name="M:SRSWebApi.SessionManager.NewSession(System.String)">
            <summary>
                创建一个新的Session
            </summary>
            <param name="allowKey"></param>
            <returns></returns>
        </member>
        <member name="T:SRSWebApi.Startup">
            <summary>
                webapi配置启动类
            </summary>
        </member>
        <member name="M:SRSWebApi.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                webapi配置启动类构造
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:SRSWebApi.Startup.Configuration">
            <summary>
                配置类
            </summary>
        </member>
        <member
            name="M:SRSWebApi.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member
            name="M:SRSWebApi.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
                This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>